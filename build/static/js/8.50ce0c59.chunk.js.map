{"version":3,"sources":["app/modules/Home/Navigation.js","app/modules/Home/_redux/CrudHome.js","../node_modules/react-bootstrap/esm/Spinner.js","app/modules/Home/First.js","app/modules/Home/Home.js"],"names":["injectIntl","connect","props","intl","isAuthPasien","useSelector","authPasien","undefined","user","shallowEqual","useEffect","hash","window","location","document","getElementById","scrollIntoView","behavior","Fragment","className","id","style","borderBottom","borderRadius","href","src","toAbsoluteUrl","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","$","css","show","hide","to","margin","createUrl","data","a","axios","post","go","Spinner","forwardRef","_ref","ref","bsPrefix","variant","animation","size","children","_ref$as","as","Component","bsSpinnerPrefix","createElement","displayName","initialValues","original_link","pattern","useState","loadingShorten","setLoadingShorten","statusShorten","setStatusShorten","resultData","setResultData","LoginSchema","Yup","shape","required","formatMessage","formik","useFormik","validationSchema","onSubmit","values","replace","test","then","result","resetForm","catch","err","console","log","MODAL","showSnackbar","copys","message","copy","backgroundImage","height","backgroundPosition","backgroundSize","autoComplete","handleSubmit","placeholder","getFieldProps","touched","errors","e","preventDefault","showTerms","showPrivacy","display","top","right","moment","Date","created_at","format","rows","value","onChange","disabled","origin","new_link","navbarShrink","navbarCollapsible","body","querySelector","scrollY","classList","remove","add","seo","title","metaDescription","addEventListener","navbarToggler","slice","call","querySelectorAll","map","responsiveNavItem","getComputedStyle","click","Navigation"],"mappings":"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","file":"static/js/8.50ce0c59.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { LanguageSelectorDropdown } from \"../../../_metronic/layout/components/extras/dropdowns/LanguageSelectorDropdown\";\r\nimport { DropdownTopbarItemToggler } from \"../../../_metronic/_partials/dropdowns\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { QuickUserToggler } from \"../../../_metronic/layout/components/extras/QuiclUserToggler\";\r\n\r\nconst Navigation = (props) => {\r\n  const { intl } = props;\r\n  const { isAuthPasien } = useSelector(\r\n    ({ authPasien }) => ({\r\n      isAuthPasien: authPasien?.user !== undefined,\r\n    }),\r\n    shallowEqual\r\n  );\r\n  const collapse = () => {\r\n    if (window.$(\"#navbarResponsive\").css(\"display\") === \"none\") {\r\n      window.$(\"#navbarResponsive\").show(\"slow\");\r\n    } else {\r\n      window.$(\"#navbarResponsive\").hide(\"slow\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    var hash = window.location.hash;\r\n    if (hash === \"\" || hash === \"#page-top\") {\r\n      document\r\n        .getElementById(\"page-top\")\r\n        .scrollIntoView({ behavior: \"smooth\" });\r\n    } else if (hash === \"#about\") {\r\n      document.getElementById(\"about\").scrollIntoView({ behavior: \"smooth\" });\r\n    } else if (hash === \"#sevices\") {\r\n      document.getElementById(\"sevices\").scrollIntoView({ behavior: \"smooth\" });\r\n    } else if (hash === \"#team\") {\r\n      document.getElementById(\"team\").scrollIntoView({ behavior: \"smooth\" });\r\n    } else if (hash === \"#testimonials\") {\r\n      document\r\n        .getElementById(\"testimonials\")\r\n        .scrollIntoView({ behavior: \"smooth\" });\r\n    } else if (hash === \"#news\") {\r\n      document.getElementById(\"news\").scrollIntoView({ behavior: \"smooth\" });\r\n    } else if (hash === \"#registrasi\") {\r\n      document\r\n        .getElementById(\"registrasi\")\r\n        .scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <nav\r\n        className=\"navbar navbar-expand-lg navbar-light fixed-top\"\r\n        id=\"mainNav\"\r\n      >\r\n        <div\r\n          className=\"container-sm\"\r\n          style={{ borderBottom: \"2px solid white\", borderRadius: 5 }}\r\n        >\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            <img\r\n              src={toAbsoluteUrl(\r\n                \"/media/logos/logo-shortlinks-name-200x200.png\"\r\n              )}\r\n              alt=\"ShortlinksLogo\"\r\n            />\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler collapsed\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarResponsive\"\r\n            aria-controls=\"navbarResponsive\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n            onClick={() => {\r\n              collapse();\r\n            }}\r\n          >\r\n            <span className=\"align-text-top\">Menu</span>\r\n            <i className=\"fas fa-bars ms-1\"></i>\r\n          </button>\r\n          <div\r\n            className=\"collapse navbar-collapse justify-content-between\"\r\n            id=\"navbarResponsive\"\r\n          >\r\n            {isAuthPasien && (\r\n              <ul className=\"navbar-nav text-uppercase py-4 py-lg-0\">\r\n                {/* <li className=\"nav-item\">\r\n                  <Dropdown>\r\n                    <Dropdown.Toggle\r\n                      as={DropdownTopbarItemToggler}\r\n                      id=\"dropdown-toggle-user-profile\"\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          fontSize: 16,\r\n                          fontWeight: 600,\r\n                          letterSpacing: \"0.0625em\",\r\n                          color: \"black\",\r\n                          display: \"block\",\r\n                          padding: \"0.5rem 0\",\r\n                        }}\r\n                        className=\"cursor-pointer\"\r\n                      >\r\n                        Home\r\n                      </div>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"p-0 m-0 dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround dropdown-menu-xl\">\r\n                      <div className=\"navi navi-spacer-x-0\">\r\n                        <a\r\n                          className=\"nav-link navi-item px-8 cursor-pointer text-decoration-none\"\r\n                          href=\"/\"\r\n                          onClick={() => {\r\n                            collapse();\r\n                          }}\r\n                        >\r\n                          <div className=\"navi-link\">\r\n                            <div className=\"navi-text\">\r\n                              <div className=\"font-weight-bold cursor-pointer\">\r\n                                Home\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </a>\r\n                        <div className=\"separator separator-solid\"></div>\r\n\r\n                        <a\r\n                          className=\"nav-link navi-item px-8 cursor-pointer text-decoration-none\"\r\n                          href=\"/\"\r\n                          onClick={() => {\r\n                            collapse();\r\n                          }}\r\n                        >\r\n                          <div className=\"navi-link\">\r\n                            <div className=\"navi-text\">\r\n                              <div className=\"font-weight-bold cursor-pointer\">\r\n                                <FormattedMessage id=\"LABEL.PRICE\" />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </a>\r\n                        <div className=\"navi-separator\"></div>\r\n                      </div>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </li> */}\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/price\" className=\"nav-link\">\r\n                    <FormattedMessage id=\"LABEL.PRICE\" />\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            )}\r\n\r\n            {isAuthPasien && (\r\n              <ul className=\"navbar-nav text-uppercase py-4 py-lg-0\">\r\n                <li className=\"nav-item my-2\">\r\n                  <LanguageSelectorDropdown />\r\n                </li>\r\n                <li className=\"nav-item my-2\">\r\n                  <QuickUserToggler className=\"nav-link\" />\r\n                </li>\r\n              </ul>\r\n            )}\r\n\r\n            {!isAuthPasien && (\r\n              <ul className=\"navbar-nav text-uppercase py-4 py-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/price\" className=\"nav-link\">\r\n                    <FormattedMessage id=\"LABEL.PRICE\" />\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            )}\r\n\r\n            {!isAuthPasien && (\r\n              <ul className=\"navbar-nav text-uppercase py-4 py-lg-0\">\r\n                <li className=\"nav-item my-2 d-flex\">\r\n                  <LanguageSelectorDropdown />\r\n                  <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"nav-link font-weight-bold\"\r\n                    style={{ margin: \"inherit\" }}\r\n                  >\r\n                    <FormattedMessage id=\"LABEL.LOGIN\" />\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Navigation));\r\n","import axios from \"axios\";\r\n\r\nexport async function createUrl(data) {\r\n  return axios.post(`/v1/link-no-premium/create`, data);\r\n}\r\nexport async function go(data) {\r\n  return axios.post(`/v1/link-no-premium/go`, data);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport copy from \"clipboard-copy\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { createUrl } from \"./_redux/CrudHome\";\r\nimport moment from \"moment\";\r\n\r\nconst initialValues = {\r\n  original_link: \"\",\r\n};\r\n\r\nconst pattern = /^((http|https|ftp):\\/\\/)/;\r\n\r\nconst First = (props) => {\r\n  const { intl } = props;\r\n  const [loadingShorten, setLoadingShorten] = useState(false);\r\n  const [statusShorten, setStatusShorten] = useState(false);\r\n  const [resultData, setResultData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (loadingShorten) window.$(\"#resultUrl\").hide(\"slow\");\r\n    if (!loadingShorten && statusShorten) window.$(\"#resultUrl\").show(\"slow\");\r\n  }, [loadingShorten, statusShorten]);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    original_link: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION.REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: LoginSchema,\r\n    onSubmit: (values) => {\r\n      setLoadingShorten(true);\r\n      setStatusShorten(false);\r\n      values.original_link = values.original_link.replace(/\\s/g, \"\");\r\n      if (!pattern.test(values.original_link)) {\r\n        values.original_link = \"http://\" + values.original_link;\r\n      }\r\n      createUrl(values)\r\n        .then((result) => {\r\n          setLoadingShorten(false);\r\n          setStatusShorten(true);\r\n          setResultData(result.data.data);\r\n          formik.resetForm();\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\", err);\r\n          setLoadingShorten(false);\r\n          MODAL.showSnackbar(\r\n            intl.formatMessage({ id: \"LABEL.REQUEST_FAILED\" }),\r\n            \"error\",\r\n            3000\r\n          );\r\n        });\r\n    },\r\n  });\r\n\r\n  const copys = (message) => {\r\n    copy(message);\r\n    MODAL.showSnackbar(\r\n      intl.formatMessage({ id: \"LABEL.ALERT.COPY_URL\" }),\r\n      \"success\",\r\n      3000\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header\r\n        className=\"masthead\"\r\n        style={{\r\n          backgroundImage: `url(${toAbsoluteUrl(\r\n            \"media/bg/background-cloudlinks-login.jpg\"\r\n          )})`,\r\n          height: \"calc(100vh + 10.526rem)\",\r\n          backgroundPosition: \"50%\",\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      >\r\n        <div className=\"container text-dark\">\r\n          <Card>\r\n            <CardBody className=\"rounded p-0 d-flex bg-light\">\r\n              <div className=\"d-flex flex-column flex-lg-row-auto w-lg-650px w-xl-650px w-xxl-650px py-10 py-md-14 px-10 px-md-20 pr-lg-0\">\r\n                <h1 className=\"font-weight-bolder text-dark mb-0\">\r\n                  <FormattedMessage id=\"LABEL.SHORTEN_URL\" />\r\n                </h1>\r\n                <div className=\"font-size-h4 mb-8\">\r\n                  <FormattedMessage id=\"LABEL.DESK_SHORTEN_URL\" />\r\n                </div>\r\n                <form\r\n                  autoComplete=\"off\"\r\n                  onSubmit={formik.handleSubmit}\r\n                  className=\"d-flex flex-center py-2 px-6 bg-white rounded\"\r\n                >\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control border-0 font-weight-bold pl-2\"\r\n                    placeholder={intl.formatMessage({\r\n                      id: \"LABEL.URL\",\r\n                    })}\r\n                    {...formik.getFieldProps(\"original_link\")}\r\n                    required\r\n                  />\r\n                  {formik.touched.original_link && formik.errors.original_link && (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        {formik.errors.original_link}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {loadingShorten ? (\r\n                    <Spinner\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      className=\"text-primary\"\r\n                    />\r\n                  ) : (\r\n                    <button\r\n                      className=\"btn btn-icon btn-clean pulse pulse-primary text-primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      <span className=\"svg-icon svg-icon-sm svg-icon-primary\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"media/svg/icons/All/link-solid.svg\"\r\n                          )}\r\n                        />\r\n                      </span>\r\n                      <span className=\"pulse-ring\"></span>\r\n                    </button>\r\n                  )}\r\n                </form>\r\n                <div className=\"text-center mt-3 text-muted\">\r\n                  <span>\r\n                    By using our service you accept the{\" \"}\r\n                    <a\r\n                      href=\"#\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        MODAL.showTerms();\r\n                      }}\r\n                    >\r\n                      Terms\r\n                    </a>{\" \"}\r\n                    of service and{\" \"}\r\n                    <a\r\n                      href=\"#\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        MODAL.showPrivacy();\r\n                      }}\r\n                    >\r\n                      Privacy\r\n                    </a>\r\n                    .\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"d-none d-md-flex flex-row-fluid bgi-no-repeat bgi-position-y-center bgi-position-x-left bgi-size-cover\"\r\n                style={{\r\n                  backgroundImage: `url(${toAbsoluteUrl(\r\n                    \"media/svg/illustrations/copy-link.svg\"\r\n                  )})`,\r\n                  backgroundPosition: \"top\",\r\n                }}\r\n              ></div>\r\n            </CardBody>\r\n          </Card>\r\n          <Card id=\"resultUrl\" className=\"mt-20\" style={{ display: \"none\" }}>\r\n            <div className=\"card-header ribbon ribbon-top ribbon-ver bg-light\">\r\n              <div\r\n                className=\"ribbon-target bg-primary\"\r\n                style={{ top: -2, right: 20, display: \"block\" }}\r\n              >\r\n                <span>\r\n                  <FormattedMessage id=\"LABEL.SUCCESS\" />\r\n                </span>\r\n                <br />\r\n                <span className=\"font-size-xs\">\r\n                  <FormattedMessage id=\"LABEL.CREATED\" />:{\" \"}\r\n                  {moment(new Date(resultData?.created_at)).format(\r\n                    \"DD MMM YYYY HH:mm:ss\"\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <h3 className=\"card-title\">\r\n                <FormattedMessage id=\"LABEL.RESULT\" />\r\n              </h3>\r\n            </div>\r\n            <CardBody className=\"rounded bg-light\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <FormattedMessage id=\"LABEL.ORIGINAL_URL\" />\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <textarea\r\n                    rows=\"3\"\r\n                    className=\"form-control\"\r\n                    value={resultData?.original_link}\r\n                    onChange={() => {}}\r\n                    disabled\r\n                  ></textarea>\r\n                  <div\r\n                    className=\"input-group-append cursor-pointer\"\r\n                    onClick={() => {\r\n                      copys(resultData?.original_link);\r\n                    }}\r\n                  >\r\n                    <span className=\"input-group-text text-hover-primary\">\r\n                      <i className=\"far fa-copy p-2 text-dark\"></i>\r\n                      <FormattedMessage id=\"LABEL.COPY\" />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <FormattedMessage id=\"LABEL.NEW_URL\" />\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <textarea\r\n                    rows=\"3\"\r\n                    className=\"form-control\"\r\n                    value={window.location.origin + \"/\" + resultData?.new_link}\r\n                    onChange={() => {}}\r\n                    disabled\r\n                  ></textarea>\r\n                  <div\r\n                    className=\"input-group-append cursor-pointer\"\r\n                    onClick={() => {\r\n                      copys(\r\n                        window.location.origin + \"/\" + resultData?.new_link\r\n                      );\r\n                    }}\r\n                  >\r\n                    <span className=\"input-group-text text-hover-primary\">\r\n                      <i className=\"far fa-copy p-2 text-dark\"></i>\r\n                      <FormattedMessage id=\"LABEL.COPY\" />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </header>\r\n      <footer\r\n        id=\"sticky-footer\"\r\n        className=\"flex-shrink-0 py-4 bg-dark text-white-50\"\r\n      >\r\n        <div className=\"container text-center\">\r\n          <small>Copyright &copy; 2022 Cloudlinks</small>\r\n        </div>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(First));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { seo } from \"../../helpers\";\r\nimport Navigation from \"./Navigation\";\r\nimport First from \"./First\";\r\nimport \"./styles.scss\";\r\n\r\nfunction Home(props) {\r\n  const { intl } = props;\r\n\r\n  const navbarShrink = () => {\r\n    let navbarCollapsible = document.body.querySelector(\"#mainNav\");\r\n    if (!navbarCollapsible) {\r\n      return;\r\n    }\r\n    if (window.scrollY === 0) {\r\n      navbarCollapsible.classList.remove(\"navbar-shrink\");\r\n    } else {\r\n      navbarCollapsible.classList.add(\"navbar-shrink\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    navbarShrink();\r\n    seo({\r\n      title: `Cloudlinks - ${intl.formatMessage({\r\n        id: \"LABEL.TITLE_SEO_HOME\",\r\n      })}`,\r\n      metaDescription: intl.formatMessage({\r\n        id: \"LABEL.DESK_SEO_HOME\",\r\n      }),\r\n    });\r\n  }, [intl]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"scroll\", navbarShrink);\r\n    const navbarToggler = document.body.querySelector(\".navbar-toggler\");\r\n    const responsiveNavItems = [].slice.call(\r\n      document.querySelectorAll(\"#navbarResponsive .nav-link\")\r\n    );\r\n    responsiveNavItems.map((responsiveNavItem) => {\r\n      return responsiveNavItem.addEventListener(\"click\", () => {\r\n        if (window.getComputedStyle(navbarToggler).display !== \"none\") {\r\n          navbarToggler.click();\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"page-top\">\r\n        <Navigation {...props} />\r\n        <First {...props} />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Home));\r\n"],"sourceRoot":""}